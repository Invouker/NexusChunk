## =======================================================================
##            A. ZÁKLADNÁ KONFIGURÁCIA A LOGOVANIE
## =======================================================================

# Názov aplikácie (pre Actuator, logy)
spring.application.name=nexuschunk

# Nastavenie úrovne logovania pre Spring Security a OAuth2.
# 'WARN' zabezpečí, že sa nezobrazujú zbytočne podrobné informácie.
logging.level.org.springframework.security=WARN
logging.level.org.springframework.security.oauth2=WARN


## =======================================================================
##            B. DATABÁZA (MariaDB / JPA / Hibernate)
## =======================================================================

# 1. NASTAVENIA PRIPOJENIA
# ------------------------
# POZOR: Tieto premenné MUSIA byť nastavené ako ENVIRONMENT VARIABLES!
spring.datasource.url=${SPRING_DB_HOST}
spring.datasource.username=${SPRING_DB_USERNAME}
spring.datasource.password=${SPRING_DB_PASSWORD}
spring.datasource.driverClassName=org.mariadb.jdbc.Driver

# 2. NASTAVENIA JPA / HIBERNATE
# -----------------------------
# 'update': Hibernate sa pokúsi upraviť schému, aby zodpovedala entitám.
# NEODPORÚČA sa pre produkčné prostredie. Použi 'none' alebo 'validate'.
spring.jpa.hibernate.ddl-auto=update

# Zobrazovať generované SQL v konzole (pre debugovanie)
spring.jpa.show-sql=false

# Ak je nastavené na 'false', JPA session sa zatvorí okamžite.
spring.jpa.open-in-view=false

# Logovanie pre Hibernate
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.connections.pooling=WARN


## =======================================================================
##            C. EMAILOVÉ SLUŽBY (SMTP)
## =======================================================================

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SPRING_MAIL_USERNAME}
# POZOR: Toto je špecifické Heslo pre Aplikáciu (App Password) z Google.
spring.mail.password=${SPRING_MAIL_APP_PASSWORD}
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.auth=true


## =======================================================================
##            D. EXTERNÉ SLUŽBY
## =======================================================================

### 1. GOOGLE OAUTH 2.0 (Prihlásenie cez Google)

# CLIENT ID (Verejný identifikátor aplikácie)
spring.security.oauth2.client.registration.google.client-id=668625483624-d8lruj24e1i0kg11dfr5fnl54cqg5kp7.apps.googleusercontent.com

# CLIENT SECRET
spring.security.oauth2.client.registration.google.client-secret=${SPRING_GOOGLE_OAUTH_SECRET}

# Požadované rozsahy prístupu
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code


### 2. GOOGLE reCAPTCHA (Ochrana proti botom)

# SITE KEY
recaptcha.site-key=6Ld-8O4rAAAAAAR_RVIG1GZWiJndh2seXkjS4FAZ

# SECRET KEY (Tajný kľúč)
recaptcha.secret-key=${SPRING_RECAPTCHA_SECRET_KEY}

# Overovacia URL pre reCAPTCHA
recaptcha.verify-url=https://www.google.com/recaptcha/api/siteverify

#############
##### Caffeine Caching
#############

# 1. Povolenie a voľba Caffeine ako Cache Manager
spring.cache.type=caffeine

# 2. Definovanie NÁZVOV CACHE (musia zodpovedať 'value' v @Cacheable)
spring.cache.cache-names=minecraftUuids,minecraftAvatars

# 3. Nastavenie pravidiel Caffeine pre každú cache
# A) Konfigurácia pre MinecraftAvatars (Vyprší po 2 hodinách)
# TTL: expireAfterWrite=2h (možno použiť aj 120m, 7200s, atď.);
spring.cache.caffeine.spec.minecraftAvatars=expireAfterWrite=2h,maximumSize=10000

# B) Konfigurácia pre MinecraftUuids (Nevyprší, len limit veľkosti)
# UUID sa nikdy nemenia, cache je "trvalá" (kým sa nepreplní RAM)
spring.cache.caffeine.spec.minecraftUuids=maximumSize=50000